% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search.R
\name{search}
\alias{search}
\title{The 'search' step of the ExplodeLayout(EL) algorithm.}
\usage{
search(nodelistFile, networkFile, projName = "defaultName",
  coordfileCheckBox = TRUE, initLayout = "fr",
  radialOrEquiDist = "equidist", shiftOrRotate = "rotate",
  selectAlgoForCentroids = "median", rings = 1, output = TRUE)
}
\arguments{
\item{nodelistFile}{a nodelist object, which is a dataframe with first column as the name of nodes}

\item{networkFile}{a network object, which is a matrix or dataframe with first column as the outcome}

\item{projName}{a string which is the project name or data name specified by user. This name will be used in saved export files.}

\item{coordfileCheckBox}{a boolean variable which specifies whether the nodelistFile contains initial coordinates for all vertices.
If the nodelist is generated using our functions, it will contain two sets of original coordinates which are resulted from the
Fruchterman-Reingold and Kamada-Kawai layout.}

\item{initLayout}{a string which can be set as 'fr' or 'kk' when you have Fruchterman-Reingold and Kamada-Kawai layout initial coordinates.}

\item{radialOrEquiDist}{a string which is either 'equidist' or 'radial', which is a parameter used in the EL algorithm. For details please
read the reference paper below.}

\item{shiftOrRotate}{a string which is either 'shift' or 'rotate'. This is also a parameter used in EL algorithm.}

\item{selectAlgoForCentroids}{a string which can be 'mean', 'median' or 'minmax'. This is a parameter in EL algorithm to determine
the centroids of clusters and networks.}

\item{rings}{a interger variable which is the number of imaginary circles used in EL. It's normally set as 1 unless user has too many clusters.}

\item{output}{a boolean variable to specify whether save the output of the function into local files.}
}
\description{
This function basically takes as input the network and cluster information and generate the
networks which are exploded using the EL algorithm.
}
\details{
Input:
There are mainly two data sets the user needs to have ready before starting:
1. A 'nodelist' which containing the lables, original coordinates,
outcome (like case or control), entity, and cluster membership for all
nodes in the network.
2. A 'network' which represents the network.

The description of the data format:
The nodelist must be a dataframe with 8 columns, named as 'Label', 'FRX', 'FRY'
'KKX', 'KKY', 'Outcome', 'Cluster', 'Entity'.
The network must be a dataframe or matrix. When it's a bipartite network, the matrix should be a
incidence matrix, and the column names should be the variable names and row names should be the subjects
names. When it's unipartite, the matrix should be an adjacent matrix, and the column names and row names
are the same. The first column of the network file should be the outcome of the nodes.

Please note: the vertices names in the network MUST be consistent with the ones in the network!

As the two data sets are not trivial to make manually, it's highly recommended that
user use the function in our package to generate them.

Output:
The search function will return a list containing two dataframes. One called 'coordinates'
mainly contains the coordinates of all vertices in networks with different radius ranging from 0.1 to 2.0
(radius is a parameter in EL algorith). Another called 'edgelist' is the edgelist of the input network. These two dataframes
would serve as the input of the next visuallization step.

By default, the serach function would save the 'coordinates' and 'edgelist' dataframes into two local files.
If the user prefers just save them in memory or output as .Rdata files, he/she can choose to turn off the
output parameter.

The calculated CCS scores with different network radius are also saved into a local 'statList.dat' file.
Users can refer to the CCS scores when trying to determine which graph(s) they'd like to visualize in
the next step.
}
\references{
\url{https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5543384/}
}
